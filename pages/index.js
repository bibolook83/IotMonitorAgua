import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { PrismaClient } from "@prisma/client";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
const prisma = new PrismaClient();

export const getServerSideProps = async () => {
  const nodeMcu = await prisma.nodemcu.findMany({
    orderBy: [
      {
        id: "desc",
      },
    ],
  });
  return {
    props: {
      nodeMCU: JSON.parse(JSON.stringify(nodeMcu)),
    },
  };
};
export default function Home({ nodeMCU }) {
  // console.log(nodeMCU);
  const [getnodeMcuData, settnodeMcuData] = useState(nodeMCU);
  let nodemcuDataContainer = nodeMCU;
  const refreshDatas = async () => {
    const res = await fetch("api/ambilData", {
      method: "POST",
      headers: {
        "content-type": "application/json",
      },
      // body: JSON.stringify({ action: "setDatas", suhu: 11, debitair: 11 }),
    });
    const nodeMCUDatas = await res.json();
    settnodeMcuData(nodeMCUDatas);
  };
  useEffect(() => {
    const reqInterval = setInterval(() => refreshDatas(), 3000);
    // console.log(nodemcuDataContainer);
  }, []);
  return (
    <div className={styles.container}>
      <Head>
        <title>Lobster Monitoring</title>
        <meta name="description" content="Generated by create next app" />
        <link
          href="https://unpkg.com/boxicons@2.1.2/css/boxicons.min.css"
          rel="stylesheet"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className={styles.header}>
        <h6 className={styles.appHeading}>System Monitoring Tambak Lobster</h6>
      </header>
      <main className={styles.main}>
        <div className={styles.suhuContainer}>
          <div className={styles.suhuIcon}>
            <i class="bx bxs-thermometer"></i>
            <h6 className={styles.name}>Suhu Air</h6>
          </div>
          <div className={styles.suhuValue}>
            <div className={styles.suhuVcnt}>
              {getnodeMcuData[0]?.suhu ? getnodeMcuData[0]?.suhu : 0}
              <sup>o</sup><span> c</span>
            </div>
          </div>
          <div className={styles.suhuSatuan}>Normal</div>
        </div>
        <div className={styles.suhuContainer}>
          <div className={styles.suhuIcon}>
            <i class="bx bx-water"></i>
            <h6 className={styles.name}>Debit Air</h6>
          </div>
          <div className={styles.suhuValue}>
            <div className={styles.name}>
              {getnodeMcuData[0]?.debitair ? getnodeMcuData[0]?.debitair : 0}
            </div>
          </div>
          <div className={styles.suhuSatuan}>L/Hour</div>
        </div>
      </main>
    </div>
  );
}
